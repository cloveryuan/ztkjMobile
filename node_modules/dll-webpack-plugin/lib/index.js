"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var webpack = require("webpack");
var path = require("path");
var bundle_1 = require("./bundle");
var util_1 = require("./util");
var constant_1 = require("./constant");
var HookMethod;
(function (HookMethod) {
    HookMethod["TAP"] = "tap";
    HookMethod["TAP_ASYNC"] = "tapAsync";
    HookMethod["TAP_PROMISE"] = "tapPromise";
    HookMethod["INTERCEPT"] = "intercept";
})(HookMethod || (HookMethod = {}));
var DllWebpackPlugin = /** @class */ (function () {
    function DllWebpackPlugin(options) {
        this.isFirstCompile = true;
        this.options = options;
        this.bundle = new bundle_1.default({
            dllConfig: options.dllConfig,
        });
        this.apply = this.apply.bind(this);
        this.addFileToAssets = this.addFileToAssets.bind(this);
        this.injectAssetsIntoHtml = this.injectAssetsIntoHtml.bind(this);
        this.compatibilityHooks = this.compatibilityHooks.bind(this);
    }
    DllWebpackPlugin.prototype.apply = function (compiler) {
        var _this = this;
        var hookFuc = function (params, callback) { return __awaiter(_this, void 0, void 0, function () {
            var _a;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        if (!this.isFirstCompile) return [3 /*break*/, 3];
                        this.isFirstCompile = false;
                        _a = this.bundle.shouldRepackaged();
                        if (!_a) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.bundle.repackaged()];
                    case 1:
                        _a = (_b.sent());
                        _b.label = 2;
                    case 2:
                        _a;
                        this.addFileToAssets(compiler);
                        this.injectAssetsIntoHtml(compiler);
                        this.applyDllReferencePlugin(compiler);
                        callback();
                        return [3 /*break*/, 4];
                    case 3:
                        callback();
                        _b.label = 4;
                    case 4: return [2 /*return*/];
                }
            });
        }); };
        this.compatibilityHooks(compiler, "before-compile", hookFuc, HookMethod.TAP_ASYNC);
    };
    DllWebpackPlugin.prototype.applyDllReferencePlugin = function (compiler) {
        var dllReferencePluginOptions = __assign({}, this.options);
        Reflect.deleteProperty(dllReferencePluginOptions, "dllConfig");
        Reflect.ownKeys(this.options.dllConfig.entry)
            .forEach(function (entry) {
            var dllReferencePlugin = new webpack.DllReferencePlugin(__assign({}, dllReferencePluginOptions, { context: ".", manifest: require(constant_1.PLUGIN_PATH + "/" + constant_1.NODE_ENV + "/" + entry + ".manifest.json") }));
            compiler.apply(dllReferencePlugin);
        });
    };
    DllWebpackPlugin.prototype.addFileToAssets = function (compiler) {
        var _this = this;
        var hookFuc = function (compilation, callback) {
            var templatePath = path.normalize(compiler.options.output.path);
            var absolutePath = _this.bundle.getAbsoluteAssetsPath();
            var relativePath = _this.bundle.getRelativeAssetsPath(templatePath);
            relativePath.forEach(function (asset, index) {
                var fileSource = util_1.default.readFile(absolutePath[index]);
                compilation.assets[asset] = {
                    source: function () {
                        return fileSource;
                    },
                    size: function () {
                        return fileSource.length;
                    }
                };
            });
            callback();
        };
        this.compatibilityHooks(compiler, "emit", hookFuc, HookMethod.TAP_ASYNC);
    };
    DllWebpackPlugin.prototype.injectAssetsIntoHtml = function (compiler) {
        var _this = this;
        var publicPath = compiler.options.output.publicPath;
        var hookCompilation = function (compilation) {
            var hookFuc = function (result, callback) {
                var templatePath = path.normalize(compiler.options.output.path);
                result.assets.js = _this.bundle.getRelativeAssetsPath(templatePath)
                    .map(function (filePath) { return publicPath ? util_1.default.pathJoin(publicPath, filePath) : filePath; })
                    .concat(result.assets.js);
                callback(null, result);
            };
            _this.compatibilityHooks(compilation, "html-webpack-plugin-before-html-generation", hookFuc, HookMethod.TAP_ASYNC);
        };
        this.compatibilityHooks(compiler, "compilation", hookCompilation, HookMethod.TAP);
    };
    DllWebpackPlugin.prototype.compatibilityHooks = function (compiler, eventName, hookFuc, hookMethod) {
        if (Reflect.has(compiler, "hooks")) {
            var ccEventName = util_1.default.trainCaseToCamelCase(eventName);
            if (!compiler.hooks[ccEventName]) {
                throw new Error('No hook found for ' + eventName);
            }
            compiler.hooks[ccEventName][hookMethod](constant_1.PLUGIN_NAME, hookFuc);
            return true;
        }
        else {
            compiler.plugin(eventName, hookFuc);
            return true;
        }
    };
    return DllWebpackPlugin;
}());
module.exports = DllWebpackPlugin;
